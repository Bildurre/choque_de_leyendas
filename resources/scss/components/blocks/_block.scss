@use '../../abstracts/all' as *;

// Base block styles
.block {
  padding: $spacing-lg 0;
  
  @include responsive(tablet) {
    padding: $spacing-xxl 0;
  }
  
  // Block inner container
  &__inner {
    max-width: $max-width;
    margin: 0 auto;
    padding: 0 $spacing-md;
    
    @include responsive(tablet) {
      padding: 0 $spacing-lg;
    }
    
    &--full-width {
      max-width: 100%;
      padding: 0;
    }
  }
  
  // Block content area (when not using content wrapper)
  &__content {
    // Content without wrapper doesn't need grid-area
  }

  &-header {
    grid-template-columns: 1fr auto;
    
    .add-button {
      .icon {
        width: 2rem;
        height: 2rem;

        @include responsive(tablet) {
          width: 2.5rem;
          height: 2.5rem;
        }
      }
    }
  }
  
  // Common title styles
  &__title {
    margin: 0 0 $spacing-lg !important;
    font-size: 1.75rem;
    font-weight: 800;
    color: var(--color-text-primary);
    font-family: 'almendra', serif;
    line-height: 1.2;
    
    @include responsive(tablet) {
      font-size: 2rem;
    }
    
    @include responsive(desktop) {
      font-size: 2.25rem;
    }
  }

  // Common subtitle styles
  &__subtitle {
    margin: 0 0 $spacing-md !important;
    font-size: 1.25rem;
    font-family: 'roboto';
    font-weight: 500;
    font-style: italic;
    color: var(--color-text-secondary);
    
    @include responsive(tablet) {
      font-size: 1.375rem;
    }
    
    @include responsive(desktop) {
      font-size: 1.5rem;
    }
  }
  
  // Common text content styles - with resets for TinyMCE and browser defaults
  &__text {
    color: var(--color-text-primary);
    line-height: 1.6;
    
    // Reset all text elements
    p, h1, h2, h3, h4, h5, h6, ul, ol, li, blockquote {
      margin: 0;
      padding: 0;
      margin-block-start: 0;
      margin-block-end: 0;
      margin-inline-start: 0;
      margin-inline-end: 0;
      unicode-bidi: normal;
    }
    
    // Paragraphs
    p {
      margin-bottom: $spacing-md;
      display: block;
      
      &:last-child {
        margin-bottom: 0;
      }
    }
    
    // Lists
    ul, ol {
      margin: $spacing-sm 0;
      padding-left: $spacing-lg;
      list-style-position: outside;
      
      li {
        margin-bottom: $spacing-md;
        display: list-item;
        
        &:last-child {
          margin-bottom: 0;
        }
      }
    }
    
    ul {
      list-style-type: disc;
      list-style-position: outside;
    }
    
    ol {
      list-style-type: decimal;
      list-style-position: outside;
    }
    
    // Links
    a {
      color: var(--random-accent-color);
      text-decoration: none;
      
      &:hover {
        color: var(--random-accent-color-hover);
        text-decoration: underline;
      }
    }
    
    // Blockquotes
    blockquote {
      margin: $spacing-md 0;
      padding: $spacing-sm $spacing-md;
      border-left: 4px solid var(--random-accent-color);
      background-color: var(--color-card-bg);
      font-style: italic;
      display: block;
    }
    
    // Headers
    h1, h2, h3, h4, h5, h6 {
      margin-top: $spacing-lg;
      margin-bottom: $spacing-md;
      font-family: 'almendra', serif;
      font-weight: 700;
      line-height: 1.2;
      color: var(--color-text-primary);
      display: block;
      
      &:first-child {
        margin-top: 0;
      }
      
      &:last-child {
        margin-bottom: 0;
      }
    }
    
    h2 {
      font-size: 1.5rem;
      
      @include responsive(tablet) {
        font-size: 1.625rem;
      }
      
      @include responsive(desktop) {
        font-size: 1.75rem;
      }
    }

    h3 {
      font-size: 1.25rem;
      
      @include responsive(tablet) {
        font-size: 1.375rem;
      }
      
      @include responsive(desktop) {
        font-size: 1.5rem;
      }
    }

    h4 {
      font-size: 1.125rem;
      
      @include responsive(tablet) {
        font-size: 1.25rem;
      }
      
      @include responsive(desktop) {
        font-size: 1.375rem;
      }
    }

    h5 {
      font-size: 1.0625rem;  // 17px, apenas m√°s grande que 1rem
      
      @include responsive(tablet) {
        font-size: 1.125rem;
      }
      
      @include responsive(desktop) {
        font-size: 1.1875rem;
      }
    }
    
    // Additional resets for common elements
    strong, b {
      font-weight: 700;
    }
    
    em, i {
      font-style: italic;
    }
    
    // Tables (if using TinyMCE tables)
    table {
      table-layout: fixed;
      margin: $spacing-md auto;
      width: 100%;
      max-width: calc($max-width * .7);
      border-collapse: collapse;
      font-size: .8rem;

      @include responsive(small) {
        font-size: 1rem;
      }

      img {
        width: 1rem !important;
        height: 1rem !important;

        @include responsive(small) {
          width: 1.5rem !important;
          height: 1.5rem !important;
        }
      }
      
      th, td {
        padding: $spacing-xs $spacing-sm;
        border: 2px solid var(--color-card-border);
        text-align: left;
      }
      
      th {
        background-color: var(--color-theme-card-bg);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      img {
        width: 16px !important;
        height: 16px !important;
        transform: translateY(0);
      }
    }
    
    // Images
    img {
      max-width: 100%;
      height: auto;
      display: inline-block;
      transform: translateY(.4rem);
    }
    
    // Code blocks
    pre {
      margin: $spacing-md 0;
      padding: $spacing-sm;
      background-color: var(--color-card-bg);
      border-radius: var(--border-radius-sm);
      overflow-x: auto;
      
      code {
        background: none;
        padding: 0;
        border-radius: 0;
      }
    }
    
    code {
      background-color: var(--color-card-bg);
      padding: 0.125rem 0.25rem;
      border-radius: var(--border-radius-xs);
      font-family: 'Courier New', monospace;
      font-size: 0.875em;
    }
  }
}

// Text alignment helpers
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-justify {
  text-align: justify;
  .block__title {
    text-align: left;
  }
}

// Background colors
.block {
  // Solid background colors
  &[data-background="red"] { background-color: var(--color-block-bg-red); }
  &[data-background="orange"] { background-color: var(--color-block-bg-orange); }
  &[data-background="lime"] { background-color: var(--color-block-bg-lime); }
  &[data-background="green"] { background-color: var(--color-block-bg-green); }
  &[data-background="teal"] { background-color: var(--color-block-bg-teal); }
  &[data-background="cyan"] { background-color: var(--color-block-bg-cyan); }
  &[data-background="blue"] { background-color: var(--color-block-bg-blue); }
  &[data-background="purple"] { background-color: var(--color-block-bg-purple); }
  &[data-background="magenta"] { background-color: var(--color-block-bg-magenta); }
  
  // Accent colors
  &[data-background="accent-primary"] { background-color: var(--random-accent-color-bg-light); }
  &[data-background="accent-secondary"] { background-color: var(--random-accent-color-secondary-bg-light); }
  &[data-background="accent-tertiary"] { background-color: var(--random-accent-color-tertiary-bg-light); }
  
  // Theme colors
  &[data-background="theme-card"] { background-color: var(--color-theme-card-bg); }
  &[data-background="theme-border"] { background-color: var(--color-theme-border-bg); }
  &[data-background="theme-header"] { background-color: var(--color-theme-header-bg); }
}

// TinyMCE specific overrides (higher specificity)
.mce-content-body,
.tinymce,
[contenteditable="true"] {
  &.block__text,
  .block__text & {
    p, h1, h2, h3, h4, h5, h6, ul, ol, li, blockquote {
      margin-block-start: 0 !important;
      margin-block-end: 0 !important;
      margin-inline-start: 0 !important;
      margin-inline-end: 0 !important;
    }
  }
}

.accent-colored {
  color: var(--random-accent-color);
}

.green-bg {
  background-color: var(--color-block-bg-green);
}
.yellow-bg {
  background-color: var(--color-block-bg-lime);
}
.red-bg {
  background-color: var(--color-block-bg-red);
}