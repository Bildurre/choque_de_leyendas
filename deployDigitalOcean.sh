#!/bin/bash
# Deploy script - Sin cache de rutas para localizaci√≥n

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${GREEN}üöÄ Iniciando deployment...${NC}"

# Verificar rama
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo -e "${RED}‚ùå Error: No est√°s en main. Actual: $CURRENT_BRANCH${NC}"
    exit 1
fi

# Push cambios
echo -e "${YELLOW}üìù Subiendo cambios...${NC}"
git add .
git commit -m "Deploy: $(date +%Y-%m-%d_%H:%M:%S)" || true
git push origin main

# Merge a production
git checkout production
git merge main -m "Deploy: $(date +%Y-%m-%d_%H:%M:%S)"
git push origin production
git checkout main

# Deploy en servidor
echo -e "${YELLOW}üåê Desplegando en servidor...${NC}"
ssh root@68.183.2.184 << 'DEPLOY'
cd /var/www/laravel-game-cards

echo "üì• Actualizando c√≥digo..."
git fetch origin production
git reset --hard origin/production

echo "üì¶ Instalando dependencias..."
composer install --no-dev --optimize-autoloader --no-interaction
npm ci --production=false

echo "üé® Compilando assets..."
npm run build

echo "üóÑÔ∏è Ejecutando migraciones..."
php artisan migrate --force

echo "üßπ Limpiando cach√©s..."
php artisan config:clear
php artisan route:clear
php artisan view:clear
php artisan cache:clear

echo "‚ö° Optimizando (SIN cache de rutas)..."
# Cache de configuraci√≥n - S√ç
php artisan config:cache

# Cache de rutas - NO (problema con localizaci√≥n)
# php artisan route:cache  # COMENTADO - No cachear rutas

# Cache de vistas - S√ç
php artisan view:cache

# Optimizaci√≥n general sin rutas
php artisan optimize:clear
php artisan optimize --no-cache-routes

echo "üîó Verificando storage link..."
php artisan storage:link 2>/dev/null || true

echo "üîê Ajustando permisos..."
chown -R www-data:www-data .
chmod -R 755 .
chmod -R 775 storage bootstrap/cache

echo "‚ôªÔ∏è Reiniciando servicios..."
systemctl restart php8.3-fpm
systemctl reload nginx
supervisorctl restart laravel-worker:* 2>/dev/null || true

echo "‚úÖ Deploy completado"
DEPLOY

echo -e "\n${YELLOW}üîç Verificando...${NC}"
sleep 2
HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://68.183.2.184)

if [ "$HTTP_STATUS" = "200" ] || [ "$HTTP_STATUS" = "302" ]; then
    echo -e "${GREEN}‚ú® ¬°Deploy exitoso!${NC}"
    echo -e "${GREEN}üîó http://68.183.2.184${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è HTTP $HTTP_STATUS - Verificar manualmente${NC}"
fi